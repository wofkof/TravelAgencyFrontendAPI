@model TravelAgencyBackend.ViewModels.Order.OrderIndexViewModel
@using TravelAgencyBackend.Models 

@{
    var currentSortField = Model.SortField;
    var currentSortDirection = Model.SortDirection;
    var nextSortDirectionParticipants = (currentSortField == "ParticipantsCount" && currentSortDirection == "asc") ? "desc" : "asc";
    var nextSortDirectionAmount = (currentSortField == "TotalAmount" && currentSortDirection == "asc") ? "desc" : "asc";
    var nextSortDirectionCreated = (currentSortField == "CreatedAt" && currentSortDirection == "asc") ? "desc" : "asc";
}

<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered order-table">
        <thead class="table-light">
            <tr>
                <th>訂單編號</th>
                <th>會員名稱</th>
                <th>行程名稱</th>
                <th>
                    <a href="#" data-sort-field="ParticipantsCount" data-sort-direction="@nextSortDirectionParticipants"
                    class="sort-link @(currentSortField == "ParticipantsCount" ? "active" : "")">
                        人數 <i class="fas @(currentSortField == "ParticipantsCount" ? (currentSortDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "fa-sort")"></i>
                    </a>
                </th>
                <th>
                    <a href="#" data-sort-field="TotalAmount" data-sort-direction="@nextSortDirectionAmount"
                    class="sort-link @(currentSortField == "TotalAmount" ? "active" : "")">
                        總金額 <i class="fas @(currentSortField == "TotalAmount" ? (currentSortDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "fa-sort")"></i>
                    </a>
                </th>
                <th>訂單狀態</th> @* 表頭文字已置中 (CSS) *@
                <th>
                    <a href="#" data-sort-field="CreatedAt" data-sort-direction="@nextSortDirectionCreated"
                    class="sort-link @(currentSortField == "CreatedAt" ? "active" : "")">
                        建立日期 <i class="fas @(currentSortField == "CreatedAt" ? (currentSortDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "fa-sort")"></i>
                    </a>
                </th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Orders != null && Model.Orders.Any())
            {
                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                        <td>@Html.DisplayFor(modelItem => item.MemberName)</td>
                        <td title="@item.ItemName"><span class="truncate-text">@Html.DisplayFor(modelItem => item.ItemName)</span></td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.ParticipantsCount)</td>
                        <td class="text-end">@Html.DisplayFor(modelItem => item.TotalAmount)</td>

                        @* --- 修改訂單狀態顯示 --- *@
                        <td class="status-cell">
                            @* 加入 class 以便 CSS 控制置中 *@
                            @{
                                string badgeClass = "bg-secondary"; // 預設樣式
                                string statusText = item.Status.ToString(); // 預設文字

                                // 根據您的 OrderStatus Enum 值來判斷
                                // 假設 Enum 有 Paid, PendingPayment, Unpaid
                                switch (item.Status)
                                {
                                    case OrderStatus.Paid: // 已付款
                                        badgeClass = "bg-success";
                                        statusText = "已付款"; // 顯示中文
                                        break;
                                    case OrderStatus.Pending: // 待付款
                                        badgeClass = "bg-warning text-dark"; // 黃底建議搭配深色文字
                                        statusText = "待付款";
                                        break;
                                    // case OrderStatus.Unpaid: 未付款 (假設有這個狀態)
                                    //     badgeClass = "bg-danger";
                                    //     statusText = "未付款";
                                    //     break;
                                    case OrderStatus.Cancelled: // 其他狀態範例
                                        badgeClass = "bg-danger";
                                        statusText = "已取消";
                                        break;
                                    // 可以加入更多 case
                                    default:
                                        badgeClass = "bg-info text-dark"; // 其他未知狀態
                                        statusText = item.Status.ToString(); // 顯示 Enum 原始名稱
                                        break;
                                }
                            }
                            <span class="badge @badgeClass">@statusText</span>
                        </td>
                        @* --- 狀態顯示結束 --- *@

                        <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                @if (PermissionChecker.CanManageOrders)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.OrderId" class="btn btn-outline-primary"><i class="fas fa-edit"></i> 編輯</a>
                                }
                                else
                                {
                                    <a asp-action="Edit" asp-route-id="@item.OrderId" class="btn btn-outline-primary disabled"
                                    tabindex="-1" aria-disabled="true" onclick="return false;">
                                        <i class="fas fa-edit"></i> 編輯</a>
                                }
                                @if (PermissionChecker.CanViewOrders)
                                {
                                    <a asp-action="Details" asp-route-id="@item.OrderId" class="btn btn-outline-info"><i class="fas fa-info-circle"></i> 詳細</a>
                                }
                                else
                                {
                                    <a asp-action="Details" asp-route-id="@item.OrderId" class="btn btn-outline-info disabled"
                                    tabindex="-1" aria-disabled="true" onclick="return false;">
                                        <i class="fas fa-info-circle"></i> 詳細</a>
                                }
                                @if (PermissionChecker.CanManageOrders)
                                {
                                    <a asp-action="Delete" asp-route-id="@item.OrderId" class="btn btn-outline-danger"><i class="fas fa-trash"></i> 刪除</a>
                                }
                                else
                                {
                                    <a asp-action="Delete" asp-route-id="@item.OrderId" class="btn btn-outline-danger disabled"
                                       tabindex="-1" aria-disabled="true" onclick="return false;">
                                        <i class="fas fa-trash"></i> 刪除</a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center">找不到符合條件的訂單。</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="8">
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        @* 左下角：分頁資訊 *@
                        <div class="pagination-info">
                            @if (Model.TotalCount > 0)
                            {
                                <span>第 @Model.PageIndex 頁 / 共 @Model.TotalPages 頁 , 總筆數 : @Model.TotalCount 筆</span>
                            }
                            else
                            {
                                <span>沒有資料</span>
                            }
                        </div>
                        @* 右側：分頁頁碼 *@
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination pagination-sm mb-0">
                                    <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")"> <a href="#" class="page-link" data-page="@(Model.PageIndex - 1)" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a> </li>
                                    @for (int i = 1; i <= Model.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.PageIndex ? "active" : "")"> <a href="#" class="page-link" data-page="@i">@i</a> </li>
                                    }
                                    <li class="page-item @(!Model.HasNextPage ? "disabled" : "")"> <a href="#" class="page-link" data-page="@(Model.PageIndex + 1)" aria-label="Next"><span aria-hidden="true">&raquo;</span></a> </li>
                                </ul>
                            </nav>
                        }
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>

