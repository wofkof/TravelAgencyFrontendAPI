@model TravelAgencyBackend.ViewModels.Employee.EmployeeListPageViewModel

@{
    ViewData["Title"] = "員工列表";
    var start = (Model.CurrentPage - 1) * Model.PageSize + 1;
    var end = start + Model.Employees.Count() - 1;
}

<h1 class="mb-4">員工基本資料</h1>

<div class="d-flex justify-content-between align-items-center mb-3">
    <a asp-action="Create" class="btn btn-success btn-lg fs-6">＋ 建立新員工</a>

    <form asp-action="List" method="get" class="mb-0" style="width: 420px;">
        <div class="input-group">
            <input type="text" name="txtKeyword" class="form-control" placeholder="輸入姓名、電話或信箱進行搜尋" value="@Model.Keyword" autocomplete="off" />
            <button type="submit" class="btn btn-outline-primary">搜尋</button>
        </div>
    </form>
</div>

<div class="text-end text-muted small mb-2">
    顯示第 <strong>@start ~ @end</strong> 筆，共 <strong>@Model.TotalCount</strong> 筆資料
</div>

<table class="table table-striped table-hover table-bordered text-center">
    <thead class="table-dark">
        <tr>
            <th>序</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Name)</th>
            <th>職位</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Phone)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Email)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().HireDate)</th>
            <th>@Html.DisplayNameFor(model => model.Employees.First().Status)</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = (Model.CurrentPage - 1) * Model.PageSize;
            foreach (var item in Model.Employees)
            {
                count++;
                <tr>
                    <td>@count</td>
                    <td>@item.Name</td>
                    <td>@item.RoleName</td>
                    <td>@item.Phone</td>
                    <td>@item.Email</td>
                    <td>@item.HireDate.ToString("yyyy/MM/dd")</td>
                    <td>@item.StatusDisplay</td>
                    <td class="text-nowrap">
                        @Html.ActionLink("詳細", "Details", "Employee", new { id = item.EmployeeId }, new { @class = "btn btn-outline-primary btn-sm me-1" })
                        @Html.ActionLink("修改", "Edit", "Employee", new { id = item.EmployeeId }, new { @class = "btn btn-outline-info btn-sm me-1" })
                        @Html.ActionLink("刪除", "Delete", "Employee", new { id = item.EmployeeId }, new { @class = "btn btn-outline-danger btn-sm", onclick = "return confirm('確定要進行刪除作業嗎?')" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<nav class="mt-3">
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("List", new { page = Model.CurrentPage - 1, txtKeyword = Model.Keyword })">«</a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("List", new { page = i, txtKeyword = Model.Keyword })">@i</a>
            </li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("List", new { page = Model.CurrentPage + 1, txtKeyword = Model.Keyword })">»</a>
            </li>
        }
    </ul>
</nav>
